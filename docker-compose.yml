version: '3.1'

services:
  food:
    image: nutri_bot/food_info_serv
    build:
      context: food_info_serv
      dockerfile: Dockerfile
    command: pnpm run dev
    environment:
      NODE_ENV: development
      STAGE: dev
      PORT: 3000
      USERNAME: root
      PASSWORD: example
      DATABASE: nutribot
      HOST: mongo:27017
    volumes:
      - ./food_info_serv:/home/node/app
    ports:
      - 3000:3000
    depends_on:
      - mongo

  person:
    image: nutri_bot/person_info_serv
    build:
      context: person_info_serv
      dockerfile: Dockerfile
    command: pnpm run dev
    environment:
      NODE_ENV: development
      STAGE: dev
      PORT: 3100
      USERNAME: root
      PASSWORD: example
      DATABASE: nutribot
      HOST: mongo:27017
    volumes:
      - ./person_info_serv:/home/node/app
    ports:
      - 3100:3100
    depends_on:
      - mongo

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    depends_on:
      - mongo

  robot:
    image: nutri_bot/robot
    build:
      context: robot_ufla
      dockerfile: Dockerfile
    command: python3 main.py
    env_file:
      - robot_ufla/.env
    depends_on:
      - person
      - food

